# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Azure Pipeline Template for ML Workspace Setup

jobs:

- job: sample_files
  displayName: 'Sample Files Setup'
  steps:

    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: 3.7
    
    - bash: |
        # Install dependencies
        dependencies="azureml-opendatasets==$(SDK_VERSION) pandas"
        python -m pip install --upgrade pip && python -m pip install $dependencies
        # Download sample files
        datapath_train="sample-data-train"
        datapath_inference="sample-data-inference"
        data_script="mlops-pipelines/scripts/download_data.py"
        python $data_script --maxfiles $(DATASET_MAXFILES) \
                            --train-path $datapath_train \
                            --inference-path $datapath_inference
        echo "##vso[task.setvariable variable=datapath_train;isOutput=true;]$datapath_train"
        echo "##vso[task.setvariable variable=datapath_inference;isOutput=true;]$datapath_inference"
      name: download_files
      displayName: 'Download Sample Files'
      failOnStderr: true
    
    - task: AzureCLI@1
      displayName: 'Upload files to AML datastore'
      inputs:
        azureSubscription: $(SERVICECONNECTION_GROUP)
        scriptLocation: inlineScript
        inlineScript: |
          workspace_params="--workspace-name $(AMLWORKSPACE_NAME) --resource-group $(RESOURCE_GROUP)"
          # Install ML extension
          az extension add -n azure-cli-ml
          # Get default datastore
          datastore=$(az ml datastore show-default $workspace_params --query name -o tsv)
          # Upload train files
          az ml datastore upload --name $datastore \
                                 --src-path $(download_files.datapath_train) \
                                 --target-path $(download_files.datapath_train) \
                                 --overwrite true \
                                 $workspace_params
          # Upload inference files
          az ml datastore upload --name $datastore \
                                 --src-path $(download_files.datapath_inference) \
                                 --target-path $(download_files.datapath_inference) \
                                 --overwrite true \
                                 $workspace_params


- job: register_dataset
  displayName: 'Register Dataset'
  dependsOn: sample_files
  variables: 
    datapath_train: $[ dependencies.sample_files.outputs['download_files.datapath_train'] ]
    datapath_inference: $[ dependencies.sample_files.outputs['download_files.datapath_inference'] ]
    aml_datasetname_train: $(AML_DATASET_NAME)_train
    aml_datasetname_inference: $(AML_DATASET_NAME)_inference
  steps:

    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: 3.7

    - task: AzureCLI@1
      displayName: 'Register dataset'
      inputs:
        azureSubscription: $(SERVICECONNECTION_GROUP)
        scriptLocation: inlineScript
        inlineScript: |
          # Install dependencies
          dependencies="azureml-sdk==$(SDK_VERSION)"
          python -m pip install --upgrade pip && python -m pip install $dependencies
          # Register train dataset
          register_dataset_script=mlops-pipelines/scripts/register_or_update_dataset.py
          python $register_dataset_script --path $DATAPATH_TRAIN \
                                          --name $AML_DATASETNAME_TRAIN \
                                          --subscription-id $(az account show --query id -o tsv) \
                                          --resource-group $(RESOURCE_GROUP) \
                                          --workspace-name $(AMLWORKSPACE_NAME)
          # Register inference dataset
          python $register_dataset_script --path $DATAPATH_INFERENCE \
                                          --name $AML_DATASETNAME_INFERENCE \
                                          --subscription-id $(az account show --query id -o tsv) \
                                          --resource-group $(RESOURCE_GROUP) \
                                          --workspace-name $(AMLWORKSPACE_NAME)
