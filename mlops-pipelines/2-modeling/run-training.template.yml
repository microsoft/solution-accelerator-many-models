# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Azure Pipeline Template for running the training pipeline

jobs:

- job: check_training_method
  displayName: 'Check Training Method'
  steps:
    - bash: |
        if [ "$(TRAINING_METHOD)" != "automl" ] && [ "$(TRAINING_METHOD)" != "customscript" ]; then
          >&2 echo "Error: variable TRAINING_METHOD must be set to 'automl' or 'customscript'"
        fi
      displayName: 'Check Training Method'
      failOnStderr: true


- job: publish_training_pipeline
  displayName: 'Publish Training AML Pipeline'
  dependsOn: check_training_method
  steps:

    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: 3.7

    - task: AzureCLI@1
      displayName: 'Publish Training AML Pipeline'
      inputs:
        azureSubscription: $(SERVICECONNECTION_WORKSPACE)
        scriptLocation: inlineScript
        inlineScript: |
          # Install dependencies
          dependencies="pyyaml azureml-sdk==$(SDK_VERSION)"
          python -m pip install --upgrade pip && python -m pip install $dependencies
          # Create/update training pipeline
          trainingbuild_script=mlops-pipelines/scripts/create_training_pipeline.py
          python $trainingbuild_script --name $(AML_TRAINING_PIPELINE_NAME) \
                                       --version $(Build.BuildId) \
                                       --scripts-dir 'scripts/$(TRAINING_METHOD)/' \
                                       --scripts-settings 'mlops-pipelines/configuration/$(TRAINING_METHOD)/script_settings.json' \
                                       --prs-config 'mlops-pipelines/configuration/$(TRAINING_METHOD)/train-parallelrunstep-config.yml' \
                                       --dataset $(AML_DATASET_NAME)_train \
                                       --compute $(AML_COMPUTE_NAME) \
                                       --artifact 'training_pipeline_id.txt' \
                                       --subscription-id $(az account show --query id -o tsv) \
                                       --resource-group $(RESOURCE_GROUP) \
                                       --workspace-name $(AMLWORKSPACE_NAME)

    - publish: 'training_pipeline_id.txt'
      artifact: training_pipeline_id
      displayName: 'Publish Training Pipeline ID'


- job: pipeline_id
  displayName: 'Get Training Pipeline ID'
  dependsOn: publish_training_pipeline
  steps:

    - download: current
      artifact: training_pipeline_id
    
    - bash: |
        # Get pipeline ID
        artifact='$(Pipeline.Workspace)/training_pipeline_id/training_pipeline_id.txt'
        pipeline_id=$(cat $artifact)
        echo "##vso[task.setvariable variable=pipeline_id;isOutput=true;]$pipeline_id"
      name: get_pipeline_id
      displayName: 'Get Training Pipeline ID'
      failOnStderr: true


- job: run_training
  displayName: 'Run Training'
  pool: server
  timeoutInMinutes: 0
  dependsOn: pipeline_id
  variables: 
    pipeline_id: $[ dependencies.pipeline_id.outputs['get_pipeline_id.pipeline_id'] ]
  steps:

    - task: ms-air-aiagility.vss-services-azureml.azureml-restApi-task.MLPublishedPipelineRestAPITask@0
      displayName: 'Invoke AML Training Pipeline'
      inputs:
        azureSubscription: '$(SERVICECONNECTION_WORKSPACE)'
        PipelineId: '$(PIPELINE_ID)'
        ExperimentName: '$(AML_TRAINING_PIPELINE_NAME)'
